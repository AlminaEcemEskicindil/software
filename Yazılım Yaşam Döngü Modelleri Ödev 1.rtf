{\rtf1\ansi\ansicpg1254\deff0\deflang1055{\fonttbl{\f0\froman\fprq2\fcharset162{\*\fname Times New Roman;}Times New Roman TUR;}{\f1\froman\fprq2\fcharset0 Times New Roman;}{\f2\froman\fprq2\fcharset238{\*\fname Times New Roman;}Times New Roman CE;}}
{\*\generator Msftedit 5.41.15.1515;}\viewkind4\uc1\pard\ri28\b\f0\fs20 Yaz\'fdl\'fdm Ya\'feam D\'f6ng\'fc Modelleri\b0\line\pard\ul Yaz\'fdl\'fdm Ya\'feam D\'f6ng\'fc Modeli nedir?\ulnone  Yaz\'fdl\'fdm Ya\'feam D\'f6ng\'fcs\'fc bir yaz\'fdl\'fdm projesini hayata ge\'e7irebilmek ad\'fdna izlenmesi gereken ad\'fdmlar\'fd ve ihtiya\'e7lar\'fd g\'f6steren bir yol haritas\'fdd\'fdr.Bu yol haritas\'fdndaki a\'feamalara Yaz\'fdl\'fdm Ya\'feam D\'f6ng\'fcs\'fc denilmektedir.Bu Ya\'feam D\'f6ng\'fcs\'fc modellerinde a\'feama say\'fds\'fd, yap\'fdlacak projede kullan\'fdlacak ya\'feam-d\'f6ng\'fcs\'fcne ve niteli\'f0ine g\'f6re farkl\'fdl\'fdk g\'f6stermektedir.Buna kar\'fe\'fdn 1970lerden beri kullan\'fdlabilen \b Klasik model \'c7a\'f0layan Ya\'feam-D\'f6ng\'fc \b0 modelinde ki a\'feamalar \'feu \'feekilde s\'fdralanmaktad\'fdr; gereksinim safhas\'fd, analiz safhas\'fd, tasar\'fdm safhas\'fd, ger\'e7ekle\'fetirme safhas\'fd, teslim sonras\'fd bak\'fdm safhas\'fd ve emeklilik safhas\'fdd\'fdr.\ul Gereksinim Safhas\'fd \ulnone yaz\'fdl\'fdm ya\'feam d\'f6ng\'fcs\'fcn\'fcn ba\'felang\'fd\'e7 noktas\'fdd\'fdr. Projedeki problemleri ve m\'fc\'feteri gereksinimlerini ele alarak m\'fc\'feteri ihtiya\'e7lar\'fdna g\'f6re proje planlanmas\'fd olu\'feturulur.\ul Analiz Safhas\'fd\ulnone , listelemi\'fe oldu\'f0umuz gereksinimleri analiz ederek m\'fc\'feterinin ihtiya\'e7lar\'fdn\'fd detayl\'fdca ortaya \'e7\'fdkar\'fdl\'fdr.Bu safha en \'f6nemli a\'feamalardan biridir ve bu a\'feamada m\'fc\'feterinin iste\'f0ine g\'f6re de\'f0il ihtiyac\'fdna g\'f6re analiz edilmelidir.\ul Tasar\'fdm Safhas\'fdnda \ulnone iki t\'fcr tasar\'fdm yap\'fdl\'fdr; mimari tasar\'fdm(kaba taslak planlar ve modelleme), ayr\'fdnt\'fdl\'fd tasar\'fdm(veritaban\'fd tasar\'fdm\'fd ve kullan\'fdlan algoritmalar).\'d6rne\'f0in yaz\'fdl\'fdm\'fdn ekranlar\'fd,ekranlarda nelerin olaca\'f0\'fd, hangi ekranlara nas\'fdl ge\'e7ilece\'f0i bu a\'feamada tasarlan\'fdr. Tasar\'fdm\'fdn birinci amac\'fd her zaman basitlik olmal\'fdd\'fdr. \'c7\'fcnk\'fc anla\'fe\'fdl\'fdr ve basit bir tasar\'fdm kodlamada sonraki de\'f0i\'feikliklerde kolayl\'fdk sa\'f0lar .\ul Ger\'e7ekle\'fetirme Safhas\'fd\ulnone ; kodlama, kurulum ve test etme gibi \'e7al\'fd\'femalar\'fdn yap\'fdld\'fd\'f0\'fd a\'feamad\'fdr.Daha \'f6nceden belirlenmi\'fe; veri yap\'fdlar\'fd \'fczerinde i\'felem yapacak algoritmalar bu a\'feamada koda d\'f6k\'fcl\'fcr ve her bir mod\'fcl birbirinden ba\'f0\'fdms\'fdz olarak \'e7al\'fd\'femas\'fd gerekmektedir.Bu nedenle b\'fct\'fcn mod\'fcller birle\'fetirelerek bir b\'fct\'fcn olarak \'e7al\'fd\'fe\'fdp \'e7al\'fd\'femad\'fd\'f0\'fd bu a\'feamada test edilir.\ul Teslim Sonras\'fd Bak\'fdm Safhas\'fd\ulnone , d\'f6ng\'fc i\'e7ersinde herhangi bir problem ile kar\'fe\'fdla\'fe\'fdld\'fd\'f0\'fd zaman geriye d\'f6nmek vetekrar ilerlemek s\'f6z konusudur. Bu y\'fczden yaz\'fdl\'fdm geli\'fetirme ya\'feam d\'f6ng\'fcs\'fc, tek y\'f6nl\'fc ve do\'f0rusal de\'f0ildir.Teslim Sonras\'fd Bak\'fdm Safhas\'fd proje tesliminden sonra proje i\'e7inde yap\'fdlabilecek herhangi bir de\'f0i\'feikli\'f0e denilmektedir.\'ddki \'e7e\'feitten olu\'feur; d\'fczelltici bak\'fdm, \'f6zelliklerin artt\'fdr\'fdlmas\'fd(m\'fckemmele\'fetirici bak\'fdm ve uyarlanabilir bak\'fdm). \ul Emeklilik Safhas\'fd\ulnone , yaz\'fdl\'fdm\'fdn kullan\'fdm s\'fcresi doldu\'f0unda yaz\'fdl\'fdm emekliye ayr\'fdl\'fdr yani vadesi dolmu\'fetur ve kullan\'fdm durdurulur.\ul Teslim Sonras\'fd Bak\'fdm Neden \'d6nemlidir?\ulnone  \'ddyi bir yaz\'fdl\'fdm d\'fc\'fe\'fcn\'fclenin aksine daima bak\'fdma a\'e7\'fdk olmal\'fdd\'fdr. K\'f6t\'fc bir yaz\'fdl\'fdm de\'f0il iyi bir yaz\'fdl\'fdm bak\'fdm yap\'fdlabilme \'f6zelli\'f0i ta\'fe\'fdr.Yaz\'fdl\'fdm s\'fcrekli geli\'feen bir alanda olmas\'fdnda kaynakl\'fd olarak yaz\'fdl\'fdmlara bak\'fdm yap\'fdlamad\'fd\'f0\'fdnda yaz\'fdl\'fdm geni\'feleyemez ve geli\'feemez  bu durum yaz\'fdl\'fdm\'fdn s\'fcresini k\'fdsaltarak zamanla i\'felevsiz hale getirecektir bu nedenlerle bak\'fdm yap\'fdlabilir olmas\'fd olduk\'e7a \'f6nemlidir.\ul Yayg\'fdn olarak kullan\'fdlan Ya\'feam-D\'f6ng\'fc modelleri;\ulnone  \'c7a\'f0layan Ya\'feam-D\'f6ng\'fc Modeli, Kodla ve D\'fczelt Ya\'feam D\'f6ng\'fc Modeli, V S\'fcre\'e7 Modeli, Helezonik(Spiral) Model veArt\'fdmsal Geli\'fetirme Ya\'feam D\'f6ng\'fc modelidir.\b\'c7a\'f0layan Ya\'feam-D\'f6ng\'fc Modeli \b0 : \'deelale y\'f6nteminde yaz\'fdl\'fdm geli\'fetirme s\'fcreci analiz, tasar\'fdm, kodlama, test, s\'fcr\'fcm ve bak\'fdm gibi safhalardan olu\'feur. Geleneksel yaz\'fdl\'fdm metotlar\'fdnda bu safhalar \'feelale modelinde oldu\'f0u gibi lineer olarak i\'feler. Her safha, ba\'felang\'fd\'e7 noktas\'fdnda bir \'f6nceki safhan\'fdn \'fcrettiklerini bulur.Kendi b\'fcnyesindeki de\'f0i\'feikler do\'f0rultusunda teslim ald\'fdklar\'fdn\'fd bir sonraki safhan\'fdn kullanabilece\'f0i \'feekilde de\'f0i\'fetirir. \b Kodla ve D\'fczelt (Code and Fix) Model \b0 : Bu model genellikle resmi olmayan bir \'fcr\'fcn fikriyle ba\'felar ve program \'fcr\'fcn \ldblquote haz\'fdr\rdblquote  olana kadar ya da gerekli zaman bitene kadar kodlama yap\'fdlarak devam eder. \b Artt\'fdr\'fdml\'fd Model\b0  : Modelde  bir  d\'f6ng\'fc  s\'f6z  konusudur.  Planlama  a\'feamas\'fd  ile  ba\'felay\'fdp planlaman\'fdn ard\'fdndan bir d\'f6ng\'fcye girer. \'ddstek analizleri, analizler, tasar\'fdmlar yap\'fdl\'fdr ve uygulamaya ge\'e7ilir. Uygulamadan sonra iki  durum vard\'fdr.\'ddlki  canl\'fdya  ge\'e7i\'fe  durumudur.  Deployment  edilir  ve  tabi  problemler her  a\'feamada oldu\'f0u  gibi  bu  a\'feamada  da  ya\'fean\'fdr.  Ama  bu  problemler  testlerin  birer  par\'e7as\'fd  olarak  g\'f6r\'fclebilir.  Bir  yandan  da testlerimiz   devam   eder.   Bu   problemler   sistemi   besler.   Testlerden   ve   canl\'fddan   gelen   bilgilere   g\'f6re   tekrar de\'f0erlendirilmeye  tabii  tutulur.  Sonra  tekrar  istek  analiz,  analizler,  canl\'fdya  bir  bilgi  verilmesi  ve  tekrar  testler  gibi s\'fcren bir d\'f6ng\'fc vard\'fdr. Bu s\'fdrada planlamada de\'f0i\'feiklikler olabilir. \b Spiral Model\b0  : Spiral  model,  di\'f0er  modellerden  farkl\'fd  olarak  s\'fcreci  olu\'feturan  a\'feamalardan  tekrar  tekrar  ge\'e7ilmesini  ve  her ge\'e7i\'fete  projenin  ilerleme  kat  etmesini  hedeflemektedir.  \'d6rne\'f0in  projenin 3  d\'f6ng\'fcde  ilerlemesi  isteniyorsa,  i\'e7eriden  d\'fd\'fear\'fdya  do\'f0ru  giden  bir  spiral  \'feeklinde proje  a\'feamalar\'fdnda  ilerlenerek  d\'f6n\'fclmelidir.Bu spirali de 4\rquote e b\'f6ld\'fc\'f0\'fcm\'fczde 4 a\'feamas\'fd vard\'fdr.1. Hedeflerin belirlenmesi2. Risklerin belirlenmesi ve \'e7\'f6z\'fcm\'fc3. Geli\'fetirme ve testler4.Sonraki d\'f6n\'fc\'fe\'fcn planlanmas\'fd \b V S\'fcre\'e7 Modeli\b0  : Ad\'fdmlar V \'feeklini olu\'feturdu\'f0u i\'e7in V-\'deeklinde Model denilmi\'fetir. Asl\'fdnda \'feelale modeline benzer fakat \'fe\'f6yle bir fark\'fd vard\'fdr. Yine planlama, ihtiya\'e7 belirleme, \'fcst seviye ve alt seviye tasar\'fdmlar vard\'fdr. \'dcst seviye de daha genel bak\'fd\'fea  g\'f6re  tasar\'fdm  yap\'fdl\'fdr.  \'dcst  seviye  tasar\'fdmlar\'fdndaha  sonra daha detayl\'fd alt  seviye tasar\'fdmlar\'fdn\'fdn  yap\'fdld\'fd\'f0\'fd g\'f6r\'fcl\'fcr.  Daha  alt  seviyelerinin  a\'e7\'fdld\'fd\'f0\'fd,  bunlar\'fdn  girdilerini-\'e7\'fdkt\'fdlar\'fdn\'fd  ve  beklentilerinin  yaz\'fdld\'fd\'f0\'fdn\'fd  s\'f6ylenebilir. Sonras\'fdnda  kodlamaya  ge\'e7ilir.  Buraya  kadar  \'feelale  modeliyle  benzerlikler s\'f6z  konusudur.  A\'fea\'f0\'fd  do\'f0ru  akan  bir proje  y\'f6netimi  s\'f6z  konusudur.Buradan  sonra  yukar\'fd  do\'f0ru  \'e7\'fdk\'fdlmaya  ba\'felan\'fdr.  Birim  testleri  yap\'fdl\'fdr.  Her  \'fcretilen mod\'fcl\'fcntesti  yap\'fdl\'fdr.  Daha  sonra  bu  mod\'fcllerin/alt  seviye  tasar\'fdm  \'fcr\'fcnlerininbirbiri  ile  \'e7al\'fd\'fema  durumu, entegrasyon testleri yap\'fdl\'fdr ve kabul testleri a\'feamas\'fdnda m\'fc\'feterinin kabul edip etmemesi ile ilgili m\'fc\'feteriye gidilir. M\'fc\'feteri uygulamay\'fd test eder. Sonra bak\'fdm ba\'felar. Bu  yakla\'fe\'fdm\'fdn  di\'f0er  bir  \'f6zelli\'f0i  de,  \'feekilden  g\'f6r\'fclece\'f0i  \'fczere  ayn\'fd  hizada  olan  a\'feamalar\'fdn  birbirini kar\'fe\'fdlamas\'fdd\'fdr. Detayl\'fd  tasar\'fdm  yap\'fdld\'fd.  Bunun  hemen  kar\'fe\'fds\'fdnda  kodlama  bittikten  sonra  birim  testleri  yap\'fdl\'fdr. Yapm\'fd\'fe  oldu\'f0umuz  tasar\'fdma  ait  testler  yap\'fdl\'fdr.  \'dcst  seviye  tasar\'fdma  ait  entegrasyon  testleri  yap\'fdl\'fdr.  Her  bir  alt mod\'fcl\'fcn  birbiri  ile  uyumlu  \'e7al\'fd\'fe\'fdp  \'e7al\'fd\'femad\'fd\'f0\'fd  test  edilir.  \'ddhtiya\'e7  analizleri  m\'fc\'feteriden  istenir  ve  nelere  ihtiya\'e7 olundu\'f0u \'e7\'fdkar\'fdl\'fdr. \'ddhtiya\'e7lar\'fdn isekabul testleri yap\'fdl\'fdr. \ldblquote Evet o ihtiya\'e7lar sa\'f0land\'fd ve tamamd\'fdr, uygundur\rdblquote  \'feeklinde onunla  ilgili  test  senaryolar\'fd  haz\'fdrlan\'fdr.  Planlaman\'fdn  da  bak\'fdm  a\'feamas\'fdnda  kar\'fe\'fdl\'fd\'f0\'fdn\'fd  g\'f6r\'fcyoruz.  Yapt\'fd\'f0\'fdm\'fdz planlamaya uygun mu? Bak\'fdm a\'feamas\'fdndan gelen bilgiler ile bu sorunun cevaplar\'fd aran\'fdr. V-\'deeklinde model asl\'fdnda birazdaha  alta  inip  yukar\'fd  \'e7\'fdkan  ve  her  a\'feamas\'fdn\'fdn  kar\'fe\'fdl\'fd\'f0\'fdn\'fdn  oldu\'f0u  bir  modeldir.  \ldblquote Bir  \'feey  yap\'fdld\'fd  ama  bunun kar\'fe\'fdl\'fd\'f0\'fd do\'f0ru mudur?\rdblquote  sorgulamas\'fdn\'fdn yap\'fdld\'fd\'f0\'fd, en alta kadar inip kodlamaya kadar inip sonra da yukar\'fdya do\'f0ru sistemi ta\'fe\'fdyan bir yap\'fdya sahiptir\line\ul\b Ya\'feam D\'f6ng\'fc Modellerinde ki avantaj ve dezavantajlar :\b0  Kodla ve D\'fczelt Avantajlar\'fd \ulnone : T\'fcm gereken yeterli olacak kadar gayrettir.T\'fcm ad\'fdmlardaki gayret direk olarak \'fcr\'fcne katk\'fd sa\'f0lad\'fd\'f0\'fdndan \'e7o\'f0u m\'fc\'feteri \'f6deme yapmaktan mutlu olur.E\'f0er \'fcr\'fcn onu yapanlar taraf\'fdndan kullan\'fdlacaksa avantajl\'fdd\'fdr.Dezavantajlar\'fd: Kodlamaya ba\'felamadan \'f6nce de\'f0i\'feiklik tahmin edilmedi\'f0inden, birbirini izleyen de\'f0i\'feikliklerden sonra kod karmakar\'fd\'fe\'fdk bir hale gelir ve daha sonraki d\'fczeltmeleri yapmak daha da zorla\'fe\'fdr.Geli\'fetirilen sistemin boyutunun artmas\'fd, yap\'fdsal olmayan bir \'feekilde karma\'fe\'fdkl\'fd\'f0\'fdn\'fdn y\'f6netilmesini zorla\'fet\'fdr\'fdr.M\'fc\'feterinin s\'fcrece dahil edilmemesi kullan\'fdc\'fd ihtiya\'e7lar\'fdna uygun olmamas\'fdna yol a\'e7ar.Bireysel geli\'fetiriciler i\'e7in uygundur, tak\'fdmlar i\'e7in de\'f0il.\ul Geli\'feig\'fczel Model\ulnone :Geli\'fetirme ortam\'fdnda herhangi bir model ya da y\'f6ntem kullan\'fdlmaz.Geli\'fetiren ki\'feiye ba\'f0\'fdml\'fd (belli bir s\'fcre sonra o ki\'fei bile sistemi anlayamaz ve geli\'fetirme g\'fc\'e7l\'fc\'f0\'fc ya\'fear).\'ddzlenebilirli\'f0i ve bak\'fdm\'fd olduk\'e7a zor.60'l\'fd y\'fdllarda, daha \'e7ok tek ki\'feilik \'fcretim ortamlar\'fdnda kullan\'fdlan y\'f6ntemlerdir.Yani basit programlama y\'f6ntemidir..\ul Barok Modeli:\ulnone Ya\'feam d\'f6ng\'fcs\'fc temel ad\'fdmlar\'fdn\'fdn do\'f0rusal bir \'feekilde geli\'fetirildi\'f0i model.Barok modeli 70'li y\'fdllar\'fdn ortalar\'fdndan ba\'felanarak kullan\'fdlmaya ba\'felanm\'fd\'fet\'fdr.Belgelemeyi ayr\'fd bir s\'fcre\'e7 olarak ele al\'fdr, ve yaz\'fdl\'fdm\'fdn geli\'fetirilmesi ve testinden hemen sonra yap\'fdlmas\'fdn\'fdn \'f6ng\'f6r\'fcr.Halbuki, g\'fcn\'fcm\'fczde belgeleme yap\'fdlan i\'fein do\'f0al bir \'fcr\'fcn\'fc olarak g\'f6r\'fclmektedir.A\'feamalar aras\'fd geri d\'f6n\'fc\'felerin nas\'fdl yap\'fdlaca\'f0\'fd tan\'fdml\'fd de\'f0il.Ger\'e7ekle\'fetirim a\'feamas\'fdna daha fazla a\'f0\'fdrl\'fdk veren bir model olup, g\'fcn\'fcm\'fczde kullan\'fdm\'fd \'f6nerilmemektedir.\ul\'c7a\'f0layan Ya\'feam-D\'f6ng\'fc Modeli:\ulnone Ya\'feam d\'f6ng\'fcs\'fc temel ad\'fdmlar\'fd ba\'fetan sona en az bir kez izleyerek ger\'e7ekle\'fetirilir.\'ddyi tan\'fdml\'fd projeler ve \'fcretimi az zaman gerektiren yaz\'fdl\'fdm projeleri i\'e7in uygun bir modeldir.Geleneksel model olarak da bilinen bu modelin kullan\'fdm\'fd g\'fcn\'fcm\'fczde giderek azalmaktad\'fdr.Barok modelin aksine belgeleme i\'felevini ayr\'fd bir a\'feama olarak ele almaz ve \'fcretimin do\'f0al bir par\'e7as\'fd olarak g\'f6r\'fcr.Barok modele g\'f6re geri d\'f6n\'fc\'feler iyi tan\'fdmlanm\'fd\'fet\'fdr.Yaz\'fdl\'fdm tan\'fdmlamada belirsizlik yok (ya da az) ise ve yaz\'fdl\'fdm \'fcretimi \'e7ok zaman almayacak ise uygun bir s\'fcre\'e7 modelidir.Bir sonraki a\'feama, \'f6nceki a\'feama tamamlanmadan ba\'felayamaz.Her a\'feaman\'fdn sonucu bir ya da birden fazla onaylanan (imzalanan) belgedir.Gerekti\'f0inde geli\'fetirme aktivitelerinde iterasyonlar (tekrarlamalar) olabilir.Dezavantajlar\'fd : Bitirme kriteri olarak belgelendirmeye \'f6nem verilmektedir.Baz\'fd alanlar i\'e7in m\'fcmk\'fcnken (derleyiciler, i\'feletim sistemleri, vb.) etkile\'feimli son kullan\'fdc\'fd uygulamalar\'fd gibi alanlar i\'e7in zordur.Sistem geli\'fetirilmesi s\'fcresince de gereksinimler s\'fdkl\'fdkla de\'f0i\'feir.\'c7a\'f0layan modeli gereksinimlerin \'e7ok iyi anla\'fe\'fdlabildi\'f0i durumlarda kullan\'fdlmal\'fdd\'fdr.\'ddki ya da daha \'f6nceki fazlara gitmek \'e7ok maliyetlidir.Bu durumda da gerekti\'f0inde t\'fcm faz\'fd yeniden ger\'e7ekle\'fetirmek \'e7ok b\'fcy\'fck bir i\'fetir.Bir faz tamamlanmadan di\'f0erine ge\'e7ilememesi riski artt\'fdr\'fdr.\ul V S\'fcre\'e7 Modeli Dezavantajlar\'fd\ulnone  : Ayn\'fd zamanda ger\'e7ekle\'fetirilebilecek olaylara kolay imkan tan\'fdmaz.A\'feamalar aras\'fdnda tekrarlamalar\'fd kullanmaz.Risk \'e7\'f6z\'fcmleme ile ilgili aktiviteleri i\'e7ermez\ul Helezonik dezavantajlar\'fd\ulnone :K\'fc\'e7\'fck ve d\'fc\'fe\'fck riskli projeler i\'e7in pahal\'fd bir y\'f6ntemdir.Komplekstir (karma\'fe\'fdk).Spiral sonsuza gidebilir.Ara ad\'fdmlar\'fdn fazlal\'fd\'f0\'fd nedeniyle \'e7ok fazla dok\'fcmantasyon gerektirir.B\'fcy\'fck \'f6l\'e7ekte projelerKontrat tabanl\'fd yaz\'fdl\'fdma uymaz.Yaz\'fdl\'fdm\'fdn i\'e7ten geli\'fetirilece\'f0ini varsayar.Kontrat tabanl\'fd yaz\'fdl\'fdmlar ad\'fdm ad\'fdm anla\'fema esnekli\'f0ini sa\'f0lamaz.\'d6znel risk de\'f0erlendirme deneyimine dayan\'fdr.Y\'fcksek riskli \'f6\'f0elere yo\'f0unla\'femak, y\'fcksek riskli \'f6\'f0elerin do\'f0ru belirlenmesini gerektirir.\b Agile (\'c7evik) Yaz\'fdl\'fdm Geli\'fetirme:\b0  M\'fc\'feteriyi memnun etmek icin uzun vadeli kat\'fd planlama ve geli\'fetirme s\'fcre\'e7leri yerine de\'f0i\'feen ko\'feullara h\'fdzla adapte olup \'e7ok k\'fdsa aral\'fdklarla yeni s\'fcr\'fcmler \'e7\'fdkarmay\'fd \'f6ne \'e7\'fdkaran bir yaz\'fdl\'fdm geli\'fetirme disiplinidir.Geli\'fetirme ad\'fdmlar\'fdn\'fd raporlar yerine yeni yaz\'fdl\'fdm s\'fcr\'fcmleriyle takip etmesine olanak verdi\'f0inden kullan\'fdc\'fd taban\'fdn\'fd memnun etse de, degi\'feime a\'e7\'fdk yap\'fds\'fd hem m\'fc\'feteri hem de geli\'fetirme ekibi taraf\'fdndan yap\'fdlan degi\'feikliklerle deadline kaymalar\'fdna sebep olabilir bu y\'fczden b\'fcy\'fck planlar\'fdn par\'e7as\'fd olarak tercih ederken bu taraf\'fdn\'fdda d\'fc\'fe\'fcnmek gerekir.Buna kar\'fe\'fdn agile, s\'fcre\'e7le ilgili degi\'feen planlar\'fdn do\'f0uraca\'f0\'fd s\'fdk\'fdnt\'fdy\'fd minimize etmek icin bireyler aras\'fd ileti\'feime a\'f0\'fdrl\'fdk verir. Tak\'fdmlar\'fd k\'fc\'e7\'fck tutup onlar\'fdn kendi kendilerini organize etmelerini bekler.Extreme programming ve scrum gibi metodolojiler bu disiplinin \'e7at\'fds\'fd alt\'fdndad\'fdr.\ul\'c7evik y\'f6ntemlerdeki problemler: \lang1033\ulnone\f1 M\'fc\f2\'baterilerin s\'fcrece katk\u305?da bulunmalar\u305?n\u305? sa\u287?lamak zor olabilir. \f1 Geli\f2\'batirme ekibi par\'e7aland\u305?ysa problem var\lang1055\f0 imde \'e7al\'fd\'femaya yatk\'fdn olmayabilir. \lang1033\f1 Birden fazla payda\f2\'ba varsa, istekleri \'f6nceliklendirmek\lang1055\f0  \lang1033\f2 zor olabilir.\f1 Basitli\lang1055\f0\'f0i korumak fazladan efor ister.\f2\u304?mzalanan anla\'bamalar, di\u287?er iteratif\f0  \f2 geli\'batirme y\'f6ntemlerinde oldu\u287?u gibi s\u305?k\u305?nt\u305? \'e7\u305?karabilir.\ul\'c7evik y\'f6ntemler ve yaz\u305?l\u305?m bak\u305?m\u305?\f0  :\ulnone  \lang1033\f1\'c7o\lang1055\f0\'f0u kurulu\'fe yeni bir yaz\'fdl\'fdm sistemi yapmak i\'e7in harcayaca\'f0\'fdndan daha fazlas\'fdn\'fd var olan\'fdn bak\'fdm\'fdn\'fd yapmak i\'e7in harcar (bu e\'f0ilimdedir). E\'f0er \'e7evik y\'f6ntemler ba\'fear\'fdl\'fd olmak istiyorsa, yeni bir yaz\'fdl\'fdm geli\'fetirmenin yan\'fd s\'fdra var olan\'fdn bak\'fdm\'fdn\'fd yapma konusunda destek sunmal\'fd.\f2\u304?ki temel konu:\lang1033\ul\f1\'c7evik yakla\f2\'ba\u305?mla geli\'batirilen sistemler s\'fcrd\'fcr\'fclebilir mi (bak\u305?m\u305? yap\u305?labilir mi) \f1\'c7evik yakla\f2\'ba\u305?m, m\'fc\'baterinin de\u287?i\'baen isteklerine cevap vermek \'fczere geli\'batirilen bir sistemde efektif olarak kullan\u305?labilir mi?\ulnone Plan tabanl\u305? ve \'e7evik geli\'batirme\lang1055\f0 : \lang1033\ul\f1 Plan tabanl\lang1055\f0\'fd geli\'fetirme\ulnone : \lang1033\f1 Ayr\lang1055\f0\'fd ayr\'fd geli\'fetirme a\'feamalar\'fd vard\'fdr. Her bir a\'feamada ne yap\'fdlaca\'f0\'fd bellidir. \lang1033\f1 Yaln\lang1055\f0\'fdzca \'e7a\'f0layan modeli de\'f0il. Art\'fdr\'fdml\'fd model de olabilir.\lang1033\ul\f1\'c7evik geli\f2\'batirme\lang1055\ulnone\f0 :\lang1033\f1 Tan\lang1055\f0\'fdmlama, tasar\'fdm, geli\'fetirme ve test a\'feamalar\'fd i\'e7 i\'e7e ge\'e7mi\'fetir ve geli\'fetirme s\'fcrecinin \'e7\'fdkt\'fdlar\'fd, yaz\'fdl\'fdm geli\'fetirme esnas\'fdnda kar\'fe\'fdl\'fdkl\'fd m\'fczakere ile belirlenir.\ul Extreme programlama\ulnone : \lang1033\f1 Muhtemelen en iyi bilinen ve en s\lang1055\f0\'fdk kullan\'fdlan \'e7evik y\'f6ntem. \lang1033\f1 Extreme Programlama (XP) art\lang1055\f0\'fdr\'fdml\'fd geli\'fetirmede 'extreme' bir yol izler. \lang1033\f1 G\'fcnde birka\'e7 tane yeni s\'fcr\'fcm geli\f2\'batirilebilir;\lang1055\f0  \lang1033\f1 Her iki haftada bir yeni s\'fcr\'fcm m\'fc\f2\'bateriye teslim edilir;\lang1055\f0  \lang1033\f1 Her bir s\'fcr\'fcm i\'e7in b\'fct\'fcn testler yap\lang1055\f0\'fdl\'fdr ve ancak b\'fct\'fcn testler ba\'fear\'fdl\'fd olursa s\'fcr\'fcm teslim edilir.\ul XP ve \'e7evik prensipler : \lang1033\ulnone\f1 K\'fc\'e7\'fck ve s\lang1055\f0\'fdk sistem s\'fcr\'fcmleri sayesinde art\'fdr\'fdml\'fd y\'f6ntem benimsenir. \lang1033\f1 M\'fc\f2\'baterinin geli\'batirme s\'fcrecine kat\u305?l\u305?m\u305?n\u305?n anlam\u305? m\'fc\'baterinin tam zamanl\u305? olarak ekibe dahil olmas\u305?d\u305?r.\lang1055\f0  \lang1033\f1 S\'fcre\'e7 de\lang1055\f0\'f0il insan desteklenir. Bunun i\'e7in pairprogramming(e\'fe olarak program geli\'fetirme) y\'f6ntemi kullan\'fdl\'fdr. \lang1033\f1 De\lang1055\f0\'f0i\'feiklikler, rutin sistem s\'fcr\'fcmleri ile ger\'e7ekle\'fetirilir. \lang1033\f1 Kodun basitli\lang1055\f0\'f0i refactoringile korunur.\ul XP ve de\'f0i\'feim:\ulnone  \lang1033\f1 Yaz\lang1055\f0\'fdl\'fdm m\'fchendisli\'f0indeki geleneksel yakla\'fe\'fdm 'de\'f0i\'feim i\'e7in tasarla'  yakla\'fe\'fdm\'fdd\'fdr. De\'f0i\'feim i\'e7in gerekli olan eforu harca, b\'f6ylece yaz\'fdl\'fdm ya\'feam s\'fcresince daha az maliyetli olur. \lang1033\f1 Ancak XP b\'f6yle d\'fc\f2\'ba\'fcnmez. XP i\'e7in \'f6ng\'f6r\'fclemeyen de\u287?i\'baimler i\'e7in zaman harcamak bo\'baunad\u305?r.\lang1055\f0  \lang1033\f1 Bunun yerine refactoringile ilgilenir. B\'f6ylece de\lang1055\f0\'f0i\'feiklik gerekli oldu\'f0unda yapmas\'fd daha kolay olur.Refactoring(sistemin \'e7\'fdkt\'fdlar\'fdn\'fd ve i\'felevlerini de\'f0i\'fetirmeden i\'e7 yap\'fds\'fdn\'fdn yeniden d\'fczenlenerek geli\'fetirilmesi). \lang1033\f1 Programlama ekibi m\'fcmk\'fcn iyile\f2\'batirmeler i\'e7in kodu inceler. O anda gerekli olmasa bile bu iyile\'batirmeyi yaparlar.\lang1055\f0  \lang1033\f1 Bu, program\lang1055\f0\'fdn anla\'fe\'fdl\'fdrl\'fd\'f0\'fdn\'fd artt\'fdr\'fdr ve dok\'fcmantasyon ihtiyac\'fdn\'fd azalt\'fdr. \lang1033\f1 De\lang1055\f0\'f0i\'feiklikleri yapmak kolayd\'fdr \'e7\'fcnk\'fc kod iyi yap\'fdland\'fdr\'fdlm\'fd\'fe ve anla\'fe\'fdlabilirdir. \lang1033\f1 Ancak baz\lang1055\f0\'fd de\'f0i\'feiklikler mimari boyutunda refactoringister. Bunu yapmak biraz pahal\'fd olabilir.\ul\'d6zetle:\ulnone  \lang1033\f1\'c7evik y\'f6ntemler h\lang1055\f0\'fdzl\'fd geli\'fetirmeye odakl\'fd, s\'fdk s\'fdk s\'fcr\'fcmler olu\'feturan, s\'fcre\'e7 y\'fcklerini azaltan ve y\'fcksek kaliteli kod \'fcreten y\'f6ntemlerdir. M\'fc\'feteriyi do\'f0rudan geli\'fetirme s\'fcrecinin bir par\'e7as\'fd yaparlar. \lang1033\f1 Plan tabanl\lang1055\f0\'fd ya da \'e7evik bir y\'f6ntemin se\'e7imine karar vermek geli\'fetirilecek yaz\'fdl\'fdm\'fdn tipine, geli\'fetirme ekibinin yeteneklerine, kurum k\'fclt\'fcr\'fcne ba\'f0l\'fdd\'fdr. \lang1033\f1 XP en iyi bilinen \'e7evik y\'f6ntemdir ve s\lang1055\f0\'fdk s\'fdk s\'fcr\'fcm geli\'fetirme, kodlar\'fdn s\'fcrekli iyile\'fetirilmesi ve m\'fc\'feterinin geli\'fetirme tak\'fdm\'fdna kat\'fdl\'fdm\'fd gibi bir\'e7ok uygulamay\'fd (pratik yakla\'fe\'fdm\'fd) bar\'fdnd\'fdr\'fdr. \b Scrum :\b0  \lang1033\f1 Scrum\lang1055\f0  \lang1033\f1 yakla\f2\'ba\u305?m\u305? genel bir \'e7evik y\'f6ntemdir ancak odak noktas\u305? proje geli\'batirme pratiklerinden \'e7ok art\u305?r\u305?ml\u305? geli\'batirmenin y\'f6netilmesidir.\lang1055\f0  \lang1033\f1 Scrum\rquote da \'fc\'e7 a\f2\'baama vard\u305?r. \u304?nitial-Ba\'balang\u305?\'e7 a\'baamas\u305?nda projenin genel ama\'e7lar\u305?n\u305? belirten proje tasla\u287?\u305? olu\'baturulur ve yaz\u305?l\u305?m mimari yap\u305?s\u305? belirlenir.\lang1055\f0  \lang1033\f1 Sprint-Bunun ard\lang1055\f0\'fdndan h\'fdzl\'fd d\'f6ng\'fcler gelir. Her bir d\'f6ng\'fcne sistemin bir art\'fdr\'fdm\'fd (fonksiyonellik bar\'fdnd\'fdran yeni s\'fcr\'fcm\'fc) geli\'fetirilir. \lang1033\f1 Closure-Proje kapan\lang1055\f0\'fd\'fe a\'feamas\'fdnda proje bitirilir; kullan\'fdc\'fd klavuzlar\'fd gibi dok\'fcmanlar tamamlan\'fdr ve projeden \'f6\'f0renilen dersler de\'f0erlendirilir. \ul Sprint\endash h\'fdzl\'fd d\'f6ng\'fcler a\'feamas\'fd:\ulnone  \lang1033\f1 D\'f6ng\'fcler sabit uzunluktad\lang1055\f0\'fdr.Normalde 2-4 hafta. Her bir d\'f6ng\'fc bir s\'fcr\'fcm\'fcn geli\'fetirilmesinden sorumludur. \lang1033\f1 Se\'e7me a\f2\'baamas\u305?, proje ekibi ve m\'fc\'baterinin kat\u305?l\u305?m\u305? ile bu d\'f6ng\'fc i\'e7erisinde hangi \'f6zelliklerin ve fonksiyonelliklerin geli\'batirilece\u287?inin se\'e7ildi\u287?i a\'baamad\u305?r\lang1055\f0 . \lang1033\ul\f2 Sprint\endash h\u305?zl\u305? d\'f6ng\'fcler a\'baamas\u305?\lang1055\f0  :\ulnone  \lang1033\f1 Bir \'f6nceki madde kararla\f2\'bat\u305?r\u305?ld\u305?ktan sonra tak\u305?m yaz\u305?l\u305?m\u305? geli\'batirmek i\'e7in kendi kendine organize olur. \f1 Bu s\'fcre\'e7te tak\lang1055\f0\'fdm m\'fc\'feteriden ve kurumun geri kalan\'fdndan izole edilir. B\'fct\'fcn haberle\'feme, scrum-master(tak\'fdmda yer almayan,  ancak y\'fcr\'fct\'fcc\'fcl\'fck ve organizat\'f6rl\'fck g\'f6revi olan ki\'fei) arac\'fdl\'fd\'f0\'fd ile yap\'fdl\'fdr. \lang1033\f1 Scrum-master\rquote\lang1055\f0\'fdnrol\'fc, ekibin d\'fd\'fe kaynakl\'fd dikkat da\'f0\'fdn\'fdkl\'fd\'f0\'fdna u\'f0ramas\'fdn\'fd engellemektir. \lang1033\f1 D\'f6ng\'fcn\'fcn sonunda i\f2\'ba g\'f6zden ge\'e7irilir ve payda\'balara sunulur. Ard\u305?ndan yeni d\'f6ng\'fc ba\'balar\lang1055\f0 . \lang1033\ul\f2 Scrum\rquote\u305?n\lang1055\f0  \lang1033\f2 faydalar\u305?\lang1055\f0  \'feunlard\'fdr:\ulnone  \lang1033\f1\'dcr\'fcn, y\'f6netilebilir ve anla\f2\'ba\u305?labilir k\'fc\'e7\'fck par\'e7alara b\'f6l\'fcn\'fcr.\lang1055\f0  \lang1033\f1 B\'fct\'fcn ekip her \f2\'baeyi g\'f6r\'fcr ve tak\u305?m\u305?n ileti\'baimi geli\'bair.\lang1055\f0  \lang1033\f1 M\'fc\f2\'bateri, her bir k\'fc\'e7\'fck s\'fcr\'fcm\'fcn zaman\u305?nda teslim edildi\u287?ini g\'f6r\'fcr ve geri bildirimde bulunur.\lang1055\f0  \lang1033\f1 M\'fc\f2\'bateri ile geli\'batiriciler aras\u305?ndaki g\'fcven temin edilmi\'ba olur ve projenin ba\'baar\u305?l\u305? olaca\u287?\u305?na olan inan\'e7 herkeste olu\'baur.\lang1055\f0  \lang1033\f2\'d6zet\lang1055\f0 le \lang1033\f1 XP\rquote nin kuvvetli bir y\'f6n\'fc, bir program par\'e7as\lang1055\f0\'fd geli\'fetirilmeden \'f6nce o par\'e7a i\'e7in otomatikle\'fetirilmi\'fe test program\'fdn\'fdn yaz\'fdlmas\'fdd\'fdr. \lang1033\f1 Scrum\lang1055\f0  \lang1033\f1 y\'f6ntemi, bir proje y\'f6netimi \'e7er\'e7evesi olu\f2\'baturan \'e7evik bir y\'f6ntemdir.\lang1055\f0  \lang1033\f1\'c7evik y\'f6ntemlerin geni\f2\'ba sistemlere uygulanmas\u305? zordur. Geni\'ba sistemler a\'e7\u305?k tasar\u305?mlar ve baz\u305? dok\'fcmanlar gerektirir.\line\pard\ri28\lang1055\f0\line Kaynaklar:\par
\ldblquote Software Engineering A Practitioner\rquote s Approach\rdblquote  (7th. Ed.), Roger S. Pressman, 2013.\par
\ldblquote Software Engineering\rdblquote  (8th. Ed.), Ian Sommerville, 2007.\par
\ldblquote Guide to the Software Engineering Body of Knowledge\rdblquote , 2004.\par
\rdblquote  Yaz\'fdl\'fdm M\'fchendisli\'f0ine Giri\'fe\rdblquote , TB\'ddL-211, Dr. Ali Arifo\'f0lu.\par
\rdblquote Yaz\'fdl\'fdm M\'fchendisli\'f0i\rdblquote  (2. Bas\'fdm), Dr. M. Erhan Sar\'fddo\'f0an, 2008, \'ddstanbul: Papatya Yay\'fdnc\'fdl\'fdk. \b\line\line\line           180601053   -   Almina Ecem Eskicindil \b0\par
}
 